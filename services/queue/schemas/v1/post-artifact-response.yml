$schema: "/schemas/common/metaschema.json#"
title:              "Post Artifact Response"
description: |
  Response to a request for posting an artifact.
  Note that the `storageType` property is referenced in the request as well.
oneOf:
  - title:          "S3 Artifact Response"
    description: |
      Response to a request for a signed PUT URL that will allow you to
      upload an artifact to an S3 bucket managed by the queue.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `'s3'`
        type:       string
        enum:
          - s3
      putUrl:
        description: |
          URL to which a `PUT` request can be made to upload the artifact
          requested. Note, the `Content-Length` must be specified correctly,
          and the `ContentType` header must be set the value specified below.
        type:       string
        format:     uri
      expires:
        description: |
          Date-time after which the signed `putUrl` no longer works
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type, must be specified as header when uploading with
          the signed `putUrl`.
        type:       string
        maxLength:  255
    additionalProperties: false
    required:
      - storageType
      - putUrl
      - expires
      - contentType
  - title:          "Object Artifact Response"
    description: |
      Information supporting uploading an object to the object service.  This
      consists of an object name and uploadId, together with credentials
      allowing an upload of the designated object to the service.  The
      resulting credentials are valid for 24 hours or until the artifact
      expires, whichever is shorter, allowing ample time for any method
      negotiation, retries, and so on.  The caller should call
      `object.createUpload` with the given credentials, and perform the upload.
      Note that the `uploadId`, `projectId`, and `expires` given to
      `createUpload` must match those in this response.  The caller should call
      `object.finishUpload` when the upload is finished, at which point the
      object is immutable and the credentials are no longer useful.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `'object'`
        type:       string
        enum:
          - object
      name:
        description: |
          Name of the object on the object service.
        type: string
        pattern: '^[\x20-\x7e]+$'
      credentials: {$ref: "object-credentials.json#"}
      projectId:
        title:          "Project Identifier"
        description: |
          Project identifier.
        type:           string
        minLength:      {$const: projectId-min-length}
        maxLength:      {$const: projectId-max-length}
        pattern:        {$const: projectId-pattern}
      uploadId:
        title: "Upload ID"
        description: |-
          Unique identifier for this upload.   Once an object is created with an uploadId,
          uploads of the same object with different uploadIds will be rejected.  Callers
          should pass a randomly-generated slugid here.
        type:             string
        pattern:          {$const: slugid-pattern}
      expires:
        description: |
          Expiration time for the artifact.
        type:       string
        format:     date-time
    additionalProperties: false
    required:
      - storageType
      - name
      - projectId
      - uploadId
      - credentials
      - expires
  - title:          "Redirect Artifact Response"
    description: |
      Response to a request for the queue to redirect to a URL for a given
      artifact.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `reference`
        type:       string
        enum:
          - reference
    additionalProperties: false
    required:
      - storageType
  - title:          "Link Artifact Response"
    description: |
      Response for an artifact with `storageType` `link`.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `link`
        type:       string
        enum:
          - link
    additionalProperties: false
    required:
      - storageType
  - title:          "Error Artifact Response"
    description: |
      Response to a request for the queue to reply `424` (Failed Dependency)
      with `reason` and `message` to any `GET` request for this artifact.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `error`
        type:       string
        enum:
          - error
    additionalProperties: false
    required:
      - storageType
